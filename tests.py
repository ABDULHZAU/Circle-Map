from __future__ import division

import edlib
import time
import pysam as ps
import traceback
import signal
import os
import sys

begin = time.time()
genome_fa = "/data/xsh723/scratch/hg38/canonical_hg38/hg38.fa"

fastafile = ps.FastaFile(genome_fa)
   # get the sequence
fasta = fastafile.fetch("chr1", 1000000,1000100).upper()

print(fasta)

chr1 = fasta.upper()

begin = time.time()

pattern = 'NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN'


print(pattern)




result = edlib.align(pattern,chr1,mode='HW',task='path')
print(result)



#import edlib

#begin_edlib = time.time()
#for i in range(0,10000):
#    result = edlib.align('GCAT','GCATATTTGGTTATCAGTAAGTACATTCAGTATCTTAAATACCTTAATTCTGATTACATCGTTCTGATTGCACCACATTCCTTGCTCAATCCATTGTTGTTTCTCATTTGGACTACTGAAAGCACCTCCTGACTACATCTAATCTGAATTCTTTACAATTAGTCAGAGATATAGTTTCAAAACTTATGTAATTGTGTCATACACCCAATCATGATTCTTTGTGATTAGAATTATTTCCACTGTTCTTAGGATCAATTCACAATTCCTCTCTTTGGTTTTTAAACTCCATGGCCTGGCCCCAACCAAATTCTCCAGCTTCAGGTTGTATAAAACTGTGCTCTCTTCACTTACAATACTACTTTCATTCTCTTCTATCTGCCATGCTTACACATGCTTCATGTCTTTTGCACTTGTGATTTGTCTGCCTGAAATAAGATCTCTTTTCAGCTATACTGACTCAATTTCTACTCAGCTGTCATATCACAGATTAGGTACCATTCTCATGTAGCCACA',mode='HW',task='path')

#edlib_end = time.time()

#print((edlib_end-begin_edlib)/60)
#print(result)


#query = StripedSmithWaterman(query_sequence="TTCTGATTGCACCACATTCCTTGCTCAAT",gap_open_penalty=5,gap_extend_penalty=2,match_score=1,mismatch_score=-5)
#alignment = query("GCATATTTGGTTATCAGTAAGTACATTCAGTATCTTAAATACCTTAATTCTGATTACATCGTTCTGATTGCACCACATTCCTTGCTCAATCCATTGTTGTTTCTCATTTGGACTACTGAAAGCACCTCCTGACTACATCTAATCTGAATTCTTTACAATTAGTCAGAGATATAGTTTCAAAACTTATGTAATTGTGTCATACACCCAATCATGATTCTTTGTGATTAGAATTATTTCCACTGTTCTTAGGATCAATTCACAATTCCTCTCTTTGGTTTTTAAACTCCATGGCCTGGCCCCAACCAAATTCTCCAGCTTCAGGTTGTATAAAACTGTGCTCTCTTCACTTACAATACTACTTTCATTCTCTTCTATCTGCCATGCTTACACATGCTTCATGTCTTTTGCACTTGTGATTTGTCTGCCTGAAATAAGATCTCTTTTCAGCTATACTGACTCAATTTCTACTCAGCTGTCATATCACAGATTAGGTACCATTCTCATGTAGCCACA")

#print(alignment.get_aligned_sequence())





